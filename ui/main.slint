import "../assets/fonts/Satoshi-Regular.ttf";

import { Palette } from "palette.slint";

import { ListItem } from "list_item.slint";
import { Button } from "button.slint";
import { DroneMenu } from "drone_menu.slint";
import { PDRMenu } from "pdr_menu.slint";
import { AddSenderMenu } from "add_sender_menu.slint";

export struct Drone {
    title: string,
}

export struct Client {
    title: string,
    subtitle: string,
}

export struct Server {
    title: string,
}

export component MainWindow inherits Window {
    in property <[Drone]> drones;
    in property <[Client]> clients;
    in property <[Server]> servers;

    callback validate_pdr(input: string, current: string) -> string;
    callback validate_node_id(input: string);

    width: 1280px;
    height: 720px;
    default-font-family: "Satoshi";
    background: Palette.bg_alt;

    VerticalLayout {

        Rectangle {
            height: 64px;
            width: parent.width;
            background: Palette.bg;

            HorizontalLayout {
                padding-left: 16px;
                padding-right: 16px;
                alignment: start;

                VerticalLayout {
                    alignment: center;

                    Image {
                        source: @image-url("../assets/images/logo.svg");
                        width: 196px;
                        height: 32px;
                    }
                }
            }
        }

        Rectangle { height: 1px; background: Palette.bg_alt; }

        HorizontalLayout {
            spacing: 1px;
            
            //? Nodes column
            Rectangle {
                horizontal-stretch: 1;
                vertical-stretch: 1;
                background: Palette.bg;
                clip: true;

                Flickable {
                    width: parent.width;
                    height: parent.height;

                    VerticalLayout {
                        width: parent.width;
                        padding: 16px;
                        spacing: 8px;

                        alignment: start;

                        Text {
                            text: "DRONES";
                            color: Palette.grey;
                            font-size: 16px;
                            font-weight: 800;
                        }
                        
                        Rectangle { height: 4px; }

                        for drone[i] in drones : ListItem {
                            stripe_color: Palette.orange;
                            title: drone.title;
                            subtitle: "";
                            row_height: 48px;
                            mouseClick => {
                                droneMenu.drone = self.title;
                                droneMenu.visible = true;
                            }
                        }
                        
                        Rectangle { height: 24px; }

                        Text {
                            text: "CLIENTS";
                            color: Palette.grey;
                            font-size: 16px;
                            font-weight: 800;
                        }

                        Rectangle { height: 4px; }

                        for client[i] in clients : ListItem {
                            stripe_color: Palette.green;
                            title: client.title;
                            subtitle: client.subtitle;
                            row_height: 64px;
                        }
                        
                        Rectangle { height: 24px; }

                        Text {
                            text: "SERVERS";
                            color: Palette.grey;
                            font-size: 16px;
                            font-weight: 800;
                        }

                        Rectangle { height: 4px; }

                        for server[i] in servers : ListItem {
                            stripe_color: Palette.purple;
                            title: server.title;
                            subtitle: "";
                            row_height: 48px;
                        }
                    }
                }
            }
            
            //? Graph column
            Rectangle { horizontal-stretch: 2; vertical-stretch: 1; background: Palette.bg; }

            //? Commands column
            Rectangle {
                horizontal-stretch: 1;
                vertical-stretch: 1;
                background: Palette.bg;
                clip: true;

                Flickable {
                    width: parent.width;
                    height: parent.height;

                    VerticalLayout {
                        width: parent.width;
                        padding: 16px;
                        spacing: 8px;

                        alignment: start;

                        Button {
                            text: "Add Sender";
                            clicked => {addSenderMenu.visible = true;}
                        }

                        Button {
                            text: "Change PDR";
                            clicked => {pdrMenu.visible = true;}
                        }
                    }
                }
            }
        }
    }

    droneMenu := DroneMenu {
        visible: false;
    }

    pdrMenu := PDRMenu {
        visible: false;
        initialValue: "100";
        on_ok(value) => {
            pdrMenu.currentValue = root.validate_pdr(value, pdrMenu.currentValue);
        }
    }

    addSenderMenu := AddSenderMenu {
        visible: false;
        on_ok(value) => {
            root.validate_node_id(value);
        }
    }
}
